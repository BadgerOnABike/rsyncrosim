% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssimLibrary.R
\docType{methods}
\name{ssimLibrary}
\alias{ssimLibrary}
\alias{ssimLibrary,SsimObject-method}
\alias{ssimLibrary,missingOrNULLOrChar-method}
\title{Create or open a library.}
\usage{
ssimLibrary(name = NULL, create = F, summary = NULL, package = NULL,
  session = NULL, addon = NULL, forceUpdate = F)

\S4method{ssimLibrary}{SsimObject}(name = NULL, create = F,
  summary = NULL, package = NULL, session = NULL, addon = NULL,
  forceUpdate = F)

\S4method{ssimLibrary}{missingOrNULLOrChar}(name = NULL, create = F,
  summary = NULL, package = NULL, session = NULL, addon = NULL,
  forceUpdate = F)
}
\arguments{
\item{name}{Character string, Project/Scenario/SsimLibrary. The path to a library or SsimObject.}

\item{create}{Logical. If TRUE the library will be created if it does not exist.  If FALSE (default) an error will occur if the library does not exist.}

\item{summary}{logical. Default T}

\item{package}{Character. The package type. The default is "stsim".}

\item{session}{Session. If NULL, session() will be used.}

\item{addon}{Character or character vector. One or more addons. See addon() for options.}

\item{forceUpdate}{Logical. If FALSE (default) user will be prompted to approve any required updates. If TRUE, required updates will be applied silently.}
}
\value{
An \code{SsimLibrary} object.
}
\description{
Creates or opens an \code{\link{SsimLibrary}} object.
If summary = T, returns library summary info. 
If summary = NULL, returns library summary info if ssimObject is an SsimLibrary, SsimLibrary object otherwise.
}
\details{
\itemize{
  \item {If name is SyncroSim Project or Scenario: }{Returns the \code{\link{SsimLibrary}} associated with the Project or Scenario.}
  \item {If name is NULL: }{Create/open a SsimLibrary in the current working directory with the filename SsimLibrary.ssim.}
  \item {If name is a string: }{If string is not a valid path treat as filename in working directory. If no file suffix provided in string then add .ssim. Attempts to open a library of that name. If library does not exist creates a library of type package in the current working directory.}
  \item {If given a name and a package: }{Create/open a library called <name>.ssim. Returns an error if the library already exists but is a different type of package.}
}
}
\examples{
#Create a library using the default session
myLibrary = ssimLibrary(name="myLib", create=T)

#Open a library using the default session
myLibrary = ssimLibrary(name="myLib")

#Create library using a specific session
mySession = session("C:/Downloads/SyncroSim")
myLibrary = ssimLibrary(name="myLib",session=mySession, create=T)

session(myLibrary)
filepath(myLibrary)
info(myLibrary)
}
